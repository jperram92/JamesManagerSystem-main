name: Python Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create directories
      run: |
        if (-not (Test-Path "tests")) { New-Item -ItemType Directory -Path "tests" }
        if (-not (Test-Path "pages")) { New-Item -ItemType Directory -Path "pages" }

    - name: Create test database
      run: |
        python -c "import sqlite3; conn = sqlite3.connect('crm_test.db'); conn.close()"

    - name: Run tests with detailed output
      run: |
        echo "=================== Running Tests ==================="
        $env:DATABASE_PATH = "crm_test.db"  # Point to the test database
        python -m pytest tests/ -vv --cov=pages --cov-report=term-missing --cov-report=xml --junitxml=test-results.xml --disable-warnings

    - name: Process test results
      run: |
        if (Test-Path "test-results.xml") {
            echo "`n================= Test Summary ==================="
            $xml = [xml](Get-Content "test-results.xml")
            Write-Host "Total Tests: $($xml.testsuites.tests)"
            Write-Host "Failures: $($xml.testsuites.failures)"
            Write-Host "Errors: $($xml.testsuites.errors)"
            
            echo "`n================= Coverage Report ================"
            coverage report
        }
        
      continue-on-error: true

    - name: Generate Coverage Badge
      uses: tj-actions/coverage-badge-py@v2
      with:
        output: coverage.svg

    - name: Upload Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results.xml
          coverage.xml
          .coverage
          crm.db
        retention-days: 14
        if-no-files-found: warn

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
