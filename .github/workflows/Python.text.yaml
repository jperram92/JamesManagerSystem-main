name: Python Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest pytest-cov

    - name: Create test database
      run: python -c "import sqlite3; conn = sqlite3.connect('crm.db'); conn.close()"
      env:
        DATABASE_PATH: "crm.db"

    - name: Run tests with coverage
      run: |
        echo "=================== Running Tests ==================="
        pytest tests/ -vv --cov=pages --cov-report=term-missing --cov-report=xml --junitxml=test-results.xml --disable-warnings
      env:
        DATABASE_PATH: "crm.db"

    - name: Process test results
      if: always()
      run: |
        if [[ -f "test-results.xml" ]]; then
          echo "`n================= Test Summary ==================="
          TOTAL_TESTS=$(grep -o 'tests="[0-9]*"' test-results.xml | grep -o '[0-9]*')
          FAILURES=$(grep -o 'failures="[0-9]*"' test-results.xml | grep -o '[0-9]*')
          ERRORS=$(grep -o 'errors="[0-9]*"' test-results.xml | grep -o '[0-9]*')

          echo "Total Tests: $TOTAL_TESTS"
          echo "Failures: $FAILURES"
          echo "Errors: $ERRORS"
          
          echo "`n================= Coverage Report ================"
          coverage report
        fi
      shell: bash

    - name: Generate Coverage Badge
      if: always()
      uses: tj-actions/coverage-badge-py@v2
      with:
        output: coverage.svg

    - name: Upload Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results.xml
          coverage.xml
          .coverage
          crm.db
        retention-days: 14
        if-no-files-found: warn

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
